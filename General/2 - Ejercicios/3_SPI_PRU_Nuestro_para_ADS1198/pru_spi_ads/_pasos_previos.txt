NOTA: Si se quiere hacer make(del medcape.c) -> Hay que mover mem2file.c a otra carpeta porque si no da problemas de compilación al haber un main en los 2 archivos
NOTA: Todo esto ya está configurado en la BBB, ahora cada vez que se enciende la BBB, solo hay que hacer el punto 2.

0 - Añadir el parámetro -lprussdrv al final de la línea del gcc en el makefile

0' - Tener creado el device tree overlay:
Es una mezcla del de medcape(los gpio de start, reset, etc que aún se usan) y el de Derek(toda la parte de pru)
Se compila con:

dtc -O dtb -I dts -o /lib/firmware/EBB-PRU-ADC2-00A0.dtbo -b 0 -@ EBB-PRU-ADC2.dts  

1 - Load device tree overlay:

cat /sys/devices/bone_capemgr.?/slots

Si no sale el EBB-PRU-ADC hay que cargarlo:

cp EBB-PRU-ADC-00A0.dtbo /lib/firmware/
cd /lib/firmware/
echo EBB-PRU-ADC > /sys/devices/bone_capemgr.?/slots
cat /sys/devices/bone_capemgr.?/slots

(Para cargarlo automáticamente cuando arranque, suponiendo que al menos una vez se haya hecho todo lo de arriba):
vim /home/debian/uEnv.txt
añadir al final(no en una nueva línea): capemgr.enable_partno=EBB-PRU-ADC
vim /etc/default/capemgr
añadir CAPE=EBB-PRU-ADC

--------------------------------------------
2 - Crear espacio de memoria compartida (para compartir entre las PRU y nuestro programa host en userspace):

(Para comprobar que está cargado el módulo uio_pruss)
lsmod

(Para asignar el size de la external RAM pool):
rmmod uio_pruss
modprobe uio_pruss extram_pool_sz=0x1E8480

//Solo 36 bytes (2 muestras de 18 bytes) (para testing):
modprobe uio_pruss extram_pool_sz=0x000024

(Para comprobar si se ha hecho bien, this modification can be tested using sysfs)
cat /sys/class/uio/uio0/maps/map1/size
cat addr
cat size

3 - Compilar los ficheros en ensamblador para las pru(ficheros con extensión .p) (Posible mejora: Incluir esta compilación en el makefile principal):
pasm -b PRUADC.p
